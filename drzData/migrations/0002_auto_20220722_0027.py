# Generated by Django 3.2.5 on 2022-07-22 00:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('drzData', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='adviescontact',
            options={'ordering': ('cnt_AchterNm', 'cnt_VoorNm'), 'verbose_name_plural': 'Advies contacten'},
        ),
        migrations.AddField(
            model_name='winkelbezoek',
            name='AdviesContact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.adviescontact'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='cnt_Acties',
            field=models.ManyToManyField(blank=True, help_text='Acties (open) te nemen mbt dit contact; ', related_query_name='acties_related', to='drzData.Actie', verbose_name='Acties'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='cnt_Type',
            field=models.CharField(blank=True, choices=[('W', 'Bedrijf'), ('H', 'Deskundige')], default='W', max_length=1, null=True, verbose_name='Type contact'),
        ),
        migrations.AlterField(
            model_name='exposant',
            name='exp_Verhaal',
            field=models.TextField(blank=True, help_text='Pitch, aandachtspunten, enz bij exposant zelf (Producten hebben apart verhaal)', null=True, verbose_name='Verhaal'),
        ),
        migrations.AlterField(
            model_name='groep',
            name='grp_Website',
            field=models.CharField(blank=True, help_text='Plak hier de url van website', max_length=240, null=True, verbose_name='Website'),
        ),
        migrations.CreateModel(
            name='FollowUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fup_WelkeMaatrGenomen', models.TextField(blank=True, null=True, verbose_name='Welke maatregelen zijn er genomen?')),
                ('Fup_WelkGedragVeranderd', models.TextField(blank=True, null=True, verbose_name='Welke gedrag is er veranderd?')),
                ('Fup_WelkeVerderStappen', models.TextField(blank=True, null=True, verbose_name='Welke verdere stappen kunnen er genomen worden?')),
                ('Fup_AdviesContact', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.adviescontact')),
            ],
        ),
        migrations.CreateModel(
            name='CoachGesprek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cgs_AanmeldingWoonCorp', models.CharField(blank=True, choices=[('V', 'Verhuizing'), ('P', 'Plaatsing nieuwe apparatuur'), ('K', 'Na een klacht'), ('Ko', 'Kleinschalig onderhoud'), ('Go', 'Grootschalig onderhoud'), ('On', 'Oplevering nieuwbouw')], max_length=2, null=True, verbose_name='Aanmelding Wooncooperatie')),
                ('cgs_AanmeldingZelf', models.CharField(blank=True, choices=[('W', 'Website'), ('S', 'Social media'), ('M', 'Mailing'), ('B', 'Bewonersavond'), ('Wa', 'Wijkactie'), ('Vc', 'Verwijzing consulent'), ('Vb', 'Verwijzing mede-huurders')], max_length=2, null=True, verbose_name='Zelf aangemenld')),
                ('cgs_AanmeldAnders', models.TextField(blank=True, help_text='Andere reden voor aanmelding', null=True, verbose_name='Anders')),
                ('cgs_IsModemAanw', models.BooleanField(blank=True, null=True, verbose_name='Is er modem aanwezig in huis')),
                ('cgs_TypeCentrVent', models.CharField(blank=True, choices=[('G', 'Geen'), ('Gf', 'Geforceerd'), ('Gb', 'Gebalanceerd')], max_length=2, null=True, verbose_name='Type centrale ventilatie')),
                ('cgs_TypeElektraMeter', models.CharField(blank=True, choices=[('G', 'Gewoon'), ('S', 'Slimme meter')], help_text='Wat voor energiemeter heeft geconstateerd?', max_length=1, null=True, verbose_name='Energiemeter')),
                ('cgs_HuurderInfo', models.TextField(blank=True, help_text='Wat is er al bekend over de huurder', null=True, verbose_name='Info huurder')),
                ('cgs_DatTijdGesprek', models.DateTimeField(blank=True, help_text='Datum en tijd dat het coachgesprek is ingeplanned', null=True, verbose_name='Datum en tijd gesprek')),
                ('cgs_WieAanWezig', models.TextField(blank=True, help_text='Wie gaan er tijdens het coach gesprek aanwezig zijn', null=True, verbose_name='Wie gaan aanwezig zijn')),
                ('cgs_IsWoningToerAangekond', models.BooleanField(blank=True, help_text='Is aan de bewonders doorgegeven dat er een Woningtoer is?', null=True, verbose_name='Woningtoer aangekondigd')),
                ('cgs_EnergieRekBijDeHand', models.BooleanField(blank=True, help_text='Heeft de bewoner de energierekening bij de hand voor tijdens het gesprek?', null=True, verbose_name='Energierekening bij de hand')),
                ('cgs_ElektraMeter', models.CharField(blank=True, choices=[('G', 'Gewoon'), ('S', 'Slimme meter')], help_text='Wat voor energiemeter heeft de bewoner?', max_length=1, null=True, verbose_name='Energiemeter')),
                ('cgs_Motivatie', models.CharField(blank=True, choices=[('Ml', 'Verlagen maandlasten'), ('C', 'Confort verbeteren'), ('L', 'Leuke uitdaging'), ('G', 'Gezondheid'), ('M', 'Iets voor het milieu doen'), ('A', 'Niet achter willen blijven'), ('Vl', 'Voorop willen lopen')], help_text='Wat is de motivatie voor de aanvraag?', max_length=2, null=True, verbose_name='Motivatie')),
                ('cgs_MotivatieAnders', models.TextField(blank=True, help_text='Andere motivatie dan bovenstaand', null=True, verbose_name='Andere motivatie')),
                ('cgs_IsDatumTijdBevestigd', models.BooleanField(blank=True, help_text='Is de datum en tijd voor het coachgesprek bevestigd door de bewoner?', null=True, verbose_name='Datum / Tijd bevestiging')),
                ('cgs_IsDocsKlaarGelegd', models.BooleanField(blank=True, help_text='Zijn de documenten klaargelegd door de coach?', null=True, verbose_name='Documenten klaargelegd')),
                ('cgs_IsWonToerHerAangeKond', models.BooleanField(blank=True, help_text='Is aan de bewonders voor een twede keer doorgegeven dat er een Woningtoer is?', null=True, verbose_name='Woningtoer heraangekondigd')),
                ('cgs_IsInAgendGeplaatst', models.BooleanField(blank=True, help_text='Heeft de coach het gesprek in zijn agenda geplaats?', null=True, verbose_name='Coachgesprek in agenda coach')),
                ('cgs_GenomenEnergMaatr', models.TextField(blank=True, help_text='Zijn er al energiemaatregelen genomen door de woningbouw?', null=True, verbose_name='Genomen energie maatregelen')),
                ('cgs_GeplandeEnrgMaatr', models.TextField(blank=True, help_text='Heeft de woningbouw energiemaatregelen geplanned voor deze woning?', null=True, verbose_name='Geplande energie maatregelen')),
                ('cgs_EnergieLabel', models.TextField(blank=True, help_text='Wat is het energielabel voor deze woning nu en straks?', null=True, verbose_name='Energielabel')),
                ('cgs_BekendeProbl', models.TextField(blank=True, help_text='Zijn er bekende problemen aan deze woning (vocht, geluid)', null=True, verbose_name='Bekende problemen')),
                ('cgs_RedenEnergBesp', models.TextField(blank=True, help_text='Wat maakt dat u energie wilt besparen?', null=True, verbose_name='Reden van energiebesparen')),
                ('cgs_RedenEnergBespAnderen', models.TextField(blank=True, help_text='Wat vinden de anderen (bewoners) over reden dat uw energie wilt besparen?', null=True, verbose_name='Reden van energiebesparen volgens anderen')),
                ('cgs_ToekomstPlanWoning', models.TextField(blank=True, help_text='Wat zijn de toekomstplannen die u heeft voor de woning, indien u die heeft?', null=True, verbose_name='Toekomstplannen voor de woning')),
                ('cgs_MetWieHierWonen', models.TextField(blank=True, help_text='Met wie woont u in dit huis (medebewoners)?', null=True, verbose_name='Met wie woont u hier')),
                ('cgs_BudgetKlMaatr', models.TextField(blank=True, help_text='Is er budget voor kleine besparingen (om advies op af te stemmen)?', null=True, verbose_name='Is er budget voor kleine besparingen')),
                ('cgs_IetsGedaanEnrgMaatr', models.TextField(blank=True, help_text='Heeft u al iets gedaan aanenergiebesparing? Wat?', null=True, verbose_name='Al iets gedaan aan energiebesparing')),
                ('cgs_AfwijkEnergRek', models.TextField(blank=True, help_text='wijkt de energierekening af van het gemiddelde? Is het (te) hoog?', null=True, verbose_name='Afwijking energierekening')),
                ('cgs_TypeRadiatorknop', models.CharField(blank=True, choices=[('G', 'Gewoon'), ('T', 'Thermostaat')], help_text='Type radiatorknoppen aanwezig in huis?', max_length=1, null=True, verbose_name='Type radiatorknop')),
                ('cgs_TypeThermostaat', models.CharField(blank=True, choices=[('G', 'Gewoon'), ('S', 'Met dag nacht stand')], max_length=1, null=True, verbose_name='Type thermostaat')),
                ('cgs_IsAquariumAanw', models.BooleanField(blank=True, help_text='Is er in huis een aquarium aanwezig (ergens in huis)?', null=True, verbose_name='Is er een aquarium aanwezig')),
                ('cgs_IsAircoAanw', models.BooleanField(blank=True, help_text='Is er airco aanwezig in huis?', null=True, verbose_name='Is er Airco')),
                ('cgs_TypeRaambekleding_Wk', models.CharField(blank=True, choices=[('G', 'Gordijn'), ('J', 'Jaloezie'), ('V', 'Vouwgordijnen'), ('R', 'Rolgordijnen')], help_text='Type raambekleding in de woonkamer?', max_length=1, null=True, verbose_name='Type raambekleding')),
                ('cgs_TypeVerlichting_Wk', models.CharField(blank=True, choices=[('G', 'Gloeilamp'), ('T', 'TL'), ('H', 'Halogeen'), ('L', 'Led')], help_text='Wat voor type verlichting is er aanwezig in de woonkamer?', max_length=1, null=True, verbose_name='Type verlichting')),
                ('cgs_Problemen_Wk', models.CharField(blank=True, choices=[('S', 'Schimmel'), ('V', 'Vocht'), ('G', 'Geluid')], help_text='Constateerd u problemen in de woonkamer?', max_length=1, null=True, verbose_name='Problemen woonkamer')),
                ('cgs_OverigOpmerk_Wk', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen woonkamer')),
                ('cgs_TypeWasMachGebruik', models.CharField(blank=True, choices=[('V', 'Vol'), ('E', 'Ecostand')], max_length=1, null=True, verbose_name='Type wasmachinegebruik')),
                ('cgs_IsKokenMetDeksel', models.BooleanField(blank=True, null=True, verbose_name='Deksel op pan tijdens koken?')),
                ('cgs_TypeKookSysteem', models.CharField(blank=True, choices=[('G', 'Gas'), ('I', 'Inductie'), ('K', 'Keramisch'), ('O', 'Oven'), ('M', 'Magnetron')], help_text='Hoe kookt men, welke middelen gebruikt men daarvoor?', max_length=1, null=True, verbose_name='Wijze van koken')),
                ('cgs_IsAfzuigingVrij', models.BooleanField(blank=True, null=True, verbose_name='Is afzuiging vrij en schoon?')),
                ('cgs_IsCloseInBoilerAanw', models.BooleanField(blank=True, null=True, verbose_name='Close in boiler aanwezig?')),
                ('cgs_AanwApperatuur', models.CharField(blank=True, choices=[('T', 'Thuistap'), ('Wk', 'Waterkoker'), ('Km', 'Keukenmachine'), ('Ka', 'Koffiezetapparaat'), ('Br', 'Broodrooster'), ('Cg', 'Contact grill')], help_text='Overige aanwezige apperatuur', max_length=2, null=True, verbose_name='Aanwezige apparatuur')),
                ('cgs_Problemen_K', models.CharField(blank=True, choices=[('S', 'Schimmel'), ('V', 'Vocht'), ('G', 'Geluid')], help_text='Constateerd u problemen in de keuken?', max_length=1, null=True, verbose_name='Problemen keuken')),
                ('cgs_OverigOpmerk_K', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen keuken')),
                ('cgs_IsRadiatorAanw_Gng', models.BooleanField(blank=True, null=True, verbose_name='Radiator aanwezig in gang?')),
                ('cgs_IsBrievenBusAanw_Gng', models.BooleanField(blank=True, null=True, verbose_name='Brievenbus aanwezig in gang?')),
                ('cgs_TypeVerlichting_Gng', models.CharField(blank=True, choices=[('G', 'Gloeilamp'), ('T', 'TL'), ('H', 'Halogeen'), ('L', 'Led')], help_text='Wat voor type verlichting is er aanwezig in de Gang?', max_length=1, null=True, verbose_name='Type verlichting in gang')),
                ('cgs_TypeTochtVoorziening_Gng', models.CharField(blank=True, choices=[('G', 'Geen'), ('Ts', 'Tochtstrip'), ('K', 'Kussen')], max_length=2, null=True, verbose_name='Type tochtvoorziening gang')),
                ('cgs_Problemen_Gng', models.CharField(blank=True, choices=[('S', 'Schimmel'), ('V', 'Vocht'), ('G', 'Geluid')], help_text='Constateerd u problemen in de gang?', max_length=1, null=True, verbose_name='Problemen gang')),
                ('cgs_CVOnderhoud', models.CharField(blank=True, choices=[('N', 'Niet'), ('P', 'Periodiek')], help_text='Welke type onderhoud wordt er gepleegd aan de cb ketel?', max_length=1, null=True, verbose_name='Type onderhoud cv ketel')),
                ('cgs_CVTemperatuur', models.IntegerField(blank=True, help_text='Op wat voor water temperatuur staat de CV ketel ingestel', null=True, verbose_name='Temperatuur cv ketel')),
                ('cgs_TypeVerlichting_Slk', models.CharField(blank=True, choices=[('G', 'Gloeilamp'), ('T', 'TL'), ('H', 'Halogeen'), ('L', 'Led')], max_length=1, null=True, verbose_name='Type verlichting slaapkamer')),
                ('cgs_IsApparatuurStndBy', models.BooleanField(blank=True, null=True, verbose_name='Apparatuur op standby aanwezig slaapkamer?')),
                ('cgs_IsVerwarmd', models.BooleanField(blank=True, null=True, verbose_name='Word verwarming gebruikt in slaapkamer?')),
                ('cgs_IsAircoAanw_Slk', models.BooleanField(blank=True, null=True, verbose_name='Is er Airco in slaapkamer')),
                ('cgs_TypeBed', models.CharField(blank=True, choices=[('G', 'Geen'), ('W', 'Waterbed'), ('E', 'Elektrische deken')], max_length=1, null=True, verbose_name='Type bedverwarming')),
                ('cgs_Problemen_Slk', models.CharField(blank=True, choices=[('S', 'Schimmel'), ('V', 'Vocht'), ('G', 'Geluid')], help_text='Constateerd u problemen in de slaapkamer?', max_length=1, null=True, verbose_name='Problemen slaapkamer')),
                ('cgs_OverigOpmerk_Gng', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen slaapkamer(s)')),
                ('cgs_IsTuinVerlAanw', models.BooleanField(blank=True, null=True, verbose_name='Is er tuinverlichting aanwezig?')),
                ('cgs_IsVijverpompAanw', models.BooleanField(blank=True, null=True, verbose_name='Is er vijverpomp aanwezig?')),
                ('cgs_IsTerrasVerwAanw', models.BooleanField(blank=True, null=True, verbose_name='Is er terrasverwarming?')),
                ('cgs_OverigOpmerk_Tn', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen tuin')),
                ('cgs_IsTwedeeKoelkAanw', models.BooleanField(blank=True, help_text='Of vrieskist', null=True, verbose_name='Is er tweede koelkast aanwezig?')),
                ('cgs_OverigOpmerk_Sch', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen schuur')),
                ('cgs_BespaarAdviesTekst', models.TextField(blank=True, null=True, verbose_name='Bespaar advies')),
                ('cgs_AdviesContact', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.adviescontact')),
            ],
        ),
    ]
