# Generated by Django 3.2.5 on 2022-07-23 16:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Actie',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aci_Naam', models.CharField(max_length=85, verbose_name='Naam')),
                ('aci_Omschr', models.TextField(blank=True, null=True, verbose_name='Omschrijving')),
                ('aci_Status', models.CharField(blank=True, choices=[('O', 'Open'), ('U', 'In Uitvoering'), ('V', 'Volbracht')], default='O', max_length=1, null=True, verbose_name='Status')),
            ],
            options={
                'verbose_name_plural': 'Acties',
            },
        ),
        migrations.CreateModel(
            name='Activiteit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('act_Naam', models.CharField(help_text='Naam van de activiteit, project of themadag', max_length=85, verbose_name='Naam / Titel')),
                ('act_Omschr', models.TextField(blank=True, null=True, verbose_name='Omschrijving')),
                ('act_Type', models.CharField(blank=True, choices=[('L', 'Lezing'), ('E', 'Excursie'), ('T', 'Thema-avond'), ('E', 'Project'), ('E', 'Excursie')], default='L', max_length=1, null=True, verbose_name='Type activiteit')),
            ],
            options={
                'verbose_name': 'Activiteit, Project, Lezing, enz.',
                'verbose_name_plural': 'Activiteiten',
            },
        ),
        migrations.CreateModel(
            name='Bezoekreden',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bzr_Naam', models.CharField(max_length=120, verbose_name='Reden')),
                ('bzr_Omschr', models.TextField(blank=True, null=True, verbose_name='Omschrijving')),
            ],
            options={
                'verbose_name_plural': 'Bezoekredenen',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cnt_VoorNm', models.CharField(max_length=45, verbose_name='Voornaam')),
                ('cnt_AchterNm', models.CharField(max_length=65, verbose_name='Achternaam')),
                ('cnt_TussenVgsl', models.CharField(blank=True, max_length=15, null=True, verbose_name='Tussenvoegsel')),
                ('cnt_VoorLtrs', models.CharField(blank=True, max_length=10, null=True, verbose_name='Voorletters')),
                ('cnt_Notities', models.TextField(blank=True, null=True, verbose_name='Notities')),
                ('cnt_Type', models.CharField(blank=True, choices=[('W', 'Bedrijf'), ('H', 'Deskundige')], default='W', max_length=1, null=True, verbose_name='Type contact')),
                ('cnt_Acties', models.ManyToManyField(blank=True, help_text='Acties (open) te nemen mbt dit contact; ', related_query_name='acties_related', to='drzData.Actie', verbose_name='Acties')),
            ],
            options={
                'verbose_name_plural': 'Contacten',
                'ordering': ('cnt_AchterNm', 'cnt_VoorNm'),
            },
        ),
        migrations.CreateModel(
            name='Groep',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grp_GroupNm', models.CharField(max_length=45, verbose_name='Groep')),
                ('grp_Website', models.CharField(blank=True, help_text='Plak hier de url van website', max_length=240, null=True, verbose_name='Website')),
                ('grp_Notities', models.TextField(blank=True, null=True, verbose_name='Notities')),
                ('grp_Type', models.CharField(blank=True, choices=[('B', 'Bedrijf'), ('I', 'Instantie'), ('S', 'Stichting'), ('O', 'Organisatie'), ('G', 'Gemeente'), ('R', 'Rijksoverheid'), ('A', 'Afdeling')], default='O', max_length=1, null=True, verbose_name='Type groep')),
            ],
            options={
                'verbose_name': 'Groep',
                'verbose_name_plural': 'Organisaties, Instanties, Bedrijven, enz.',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prd_Naam', models.CharField(max_length=85, verbose_name='Product')),
            ],
        ),
        migrations.CreateModel(
            name='AdviesContact',
            fields=[
                ('contact_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='drzData.contact')),
                ('cnt_DatVastlegging', models.DateTimeField(blank=True, null=True, verbose_name='Tijdstip van notatie')),
                ('cnt_NieuwsBrief', models.BooleanField(blank=True, default=False, help_text='Dit aanvinken als het contact de nieuwsbrief wil ontvangen', null=True, verbose_name='Nieuwbrief')),
                ('cnt_Activiteit', models.ManyToManyField(blank=True, help_text='Activiteiten waaraan dit contact deelneemt; ', to='drzData.Activiteit', verbose_name='Activiteiten')),
                ('cnt_Vastlegger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_query_name='Genoteerd door', to=settings.AUTH_USER_MODEL, verbose_name='Vastlegger')),
            ],
            options={
                'verbose_name_plural': 'Advies contacten',
                'ordering': ('cnt_AchterNm', 'cnt_VoorNm'),
            },
            bases=('drzData.contact',),
        ),
        migrations.CreateModel(
            name='Exposant',
            fields=[
                ('groep_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='drzData.groep')),
                ('exp_Verhaal', models.TextField(blank=True, help_text='Pitch, aandachtspunten, enz bij exposant zelf (Producten hebben apart verhaal)', null=True, verbose_name='Verhaal')),
            ],
            options={
                'verbose_name_plural': 'Exposanten',
            },
            bases=('drzData.groep',),
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rvw_Tekst', models.TextField(verbose_name='Reviewtekst')),
                ('rvw_Beoordeling', models.CharField(blank=True, choices=[('Z', 'Zeer Goed'), ('G', 'Goed'), ('V', 'Voldoende'), ('S', 'Slecht'), ('E', 'Zeer Slecht')], max_length=1, null=True, verbose_name='Medium')),
                ('Product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.product')),
            ],
        ),
        migrations.CreateModel(
            name='Nummer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nmb_Number', models.CharField(help_text='Mobiel, Telefoon, E-mail, Facebook, enz.', max_length=85, verbose_name='Nummer')),
                ('nmb_Medium', models.CharField(blank=True, choices=[('M', 'Mobiel nummer'), ('H', 'Huistelefoon'), ('E', 'E-Mail'), ('F', 'Fax'), ('A', 'Facebook'), ('L', 'LinkedIn'), ('T', 'Twitter')], max_length=1, null=True, verbose_name='Medium')),
                ('nmb_Notities', models.CharField(blank=True, max_length=120, null=True, verbose_name='Notitie')),
                ('Contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.contact')),
                ('Groep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.groep')),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='cnt_Groepen',
            field=models.ManyToManyField(blank=True, help_text='Groepen waaronder dit contact valt; ', to='drzData.Groep', verbose_name='Groep(en)'),
        ),
        migrations.CreateModel(
            name='Adres',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adr_Straat', models.CharField(blank=True, max_length=100, null=True, verbose_name='Straat')),
                ('adr_HuisNr', models.CharField(blank=True, max_length=10, null=True, verbose_name='Huisnummer')),
                ('adr_HuisNrToev', models.CharField(blank=True, max_length=10, null=True, verbose_name='Toevoeging')),
                ('adr_PostCd', models.CharField(blank=True, max_length=15, null=True, verbose_name='Postcode')),
                ('adr_Plaats', models.CharField(blank=True, max_length=85, null=True, verbose_name='Plaats')),
                ('adr_type', models.CharField(blank=True, choices=[('W', 'Woonadres'), ('B', 'Bezoekadres'), ('A', 'Afleveradres'), ('V', 'Verblijfadres')], default='W', max_length=1, null=True, verbose_name='Type adres')),
                ('adr_Notities', models.TextField(blank=True, null=True, verbose_name='Notities')),
                ('Contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.contact')),
                ('Groep', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.groep')),
            ],
            options={
                'verbose_name_plural': 'Adressen',
            },
        ),
        migrations.CreateModel(
            name='Woninggegevens',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wng_TypeWoning', models.CharField(blank=True, choices=[('T', 'Tussenwoning'), ('H', 'Hoekwoning'), ('2', '2-1 Kap'), ('V', 'Vrijstaand'), ('A', 'Appartement')], max_length=1, null=True, verbose_name='Type Woning')),
                ('wng_Bouwjaar', models.CharField(blank=True, choices=[('V', 'Voor 1980'), ('T', '1980 - 2000'), ('N', 'Na 2000')], max_length=1, null=True, verbose_name='Bouwjaar')),
                ('wng_Bewoning', models.CharField(blank=True, choices=[('H', 'Verhuur'), ('V', 'VVE'), ('E', 'Eigendom')], max_length=1, null=True, verbose_name='Type bewoning')),
                ('Contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.adviescontact')),
            ],
            options={
                'verbose_name_plural': 'Woninggegevens',
            },
        ),
        migrations.CreateModel(
            name='WinkelBezoek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wbz_TijdStip', models.DateTimeField(blank=True, null=True, verbose_name='Tijdstip van bezoek')),
                ('wbz_Notities', models.TextField(blank=True, null=True, verbose_name='Notities')),
                ('wbz_Bezoeken', models.ManyToManyField(blank=True, to='drzData.Bezoekreden', verbose_name='Bezoekreden(en)')),
                ('AdviesContact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.adviescontact')),
            ],
            options={
                'verbose_name_plural': 'Winkelbezoeken',
                'ordering': ('wbz_TijdStip',),
            },
        ),
        migrations.CreateModel(
            name='Vraag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vrg_TypeVraag', models.CharField(blank=True, choices=[('I', 'Info'), ('A', 'Advies'), ('O', 'Offerte')], max_length=1, null=True, verbose_name='Type vraag')),
                ('vrg_OnderwerpVraag', models.CharField(blank=True, choices=[('Ea', 'Energie algemeen'), ('Eiv', 'Energie isolatie vloer'), ('Eim', 'Energie isolatie muur'), ('Eig', 'Energie isolatie glas'), ('Eid', 'Energie isolatie dak'), ('Ev', 'Energie verwarming'), ('Eo', 'Energie opwekking'), ('C', 'Circulair'), ('G', 'Groen'), ('O', 'Overig')], max_length=3, null=True, verbose_name='Onderwerp vraag')),
                ('vrg_StatusVraag', models.CharField(blank=True, choices=[('B', 'Beantwoord'), ('O', 'Onbeantwoord'), ('U', 'Wordt uitgezocht')], max_length=1, null=True, verbose_name='Status vraag')),
                ('vrg_Tekst', models.TextField(blank=True, null=True, verbose_name='Tekst vraag')),
                ('Contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.adviescontact')),
            ],
            options={
                'verbose_name_plural': 'Vragen',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='Exposant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.exposant'),
        ),
        migrations.CreateModel(
            name='FollowUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Fup_WelkeMaatrGenomen', models.TextField(blank=True, null=True, verbose_name='Welke maatregelen zijn er genomen?')),
                ('Fup_WelkGedragVeranderd', models.TextField(blank=True, null=True, verbose_name='Welke gedrag is er veranderd?')),
                ('Fup_WelkeVerderStappen', models.TextField(blank=True, null=True, verbose_name='Welke verdere stappen kunnen er genomen worden?')),
                ('Fup_AdviesContact', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.adviescontact')),
            ],
        ),
        migrations.CreateModel(
            name='CoachGesprek',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cgs_AanmeldingWoonCorp', models.CharField(blank=True, choices=[('V', 'Verhuizing'), ('P', 'Plaatsing nieuwe apparatuur'), ('K', 'Na een klacht'), ('Ko', 'Kleinschalig onderhoud'), ('Go', 'Grootschalig onderhoud'), ('On', 'Oplevering nieuwbouw')], help_text='De reden van aanmelding indien aangemeld via wooncooperatie', max_length=2, null=True, verbose_name='Aanmeldingsrede Wooncooperatie')),
                ('cgs_AanmeldingZelf', models.CharField(blank=True, choices=[('W', 'Website'), ('S', 'Social media'), ('M', 'Mailing'), ('B', 'Bewonersavond'), ('Wa', 'Wijkactie'), ('Vc', 'Verwijzing consulent'), ('Vb', 'Verwijzing mede-huurders')], help_text='De reden van aanmelding indien zelf aangemeld', max_length=2, null=True, verbose_name='Zelf aangemeld')),
                ('cgs_AanmeldAnders', models.TextField(blank=True, help_text='Vermeld hier andere reden voor aanmelding', null=True, verbose_name='Anders')),
                ('cgs_IsModemAanw', models.BooleanField(blank=True, null=True, verbose_name='Is er modem aanwezig in huis')),
                ('cgs_TypeCentrVent', models.CharField(blank=True, choices=[('G', 'Geen'), ('Gf', 'Geforceerd'), ('Gb', 'Gebalanceerd')], max_length=2, null=True, verbose_name='Type centrale ventilatie')),
                ('cgs_TypeElektraMeter', models.CharField(blank=True, choices=[('G', 'Gewoon'), ('S', 'Slimme meter')], help_text='Wat voor energiemeter heeft geconstateerd?', max_length=1, null=True, verbose_name='Energiemeter')),
                ('cgs_HuurderInfo', models.TextField(blank=True, help_text='Wat is er al bekend over de huurder', null=True, verbose_name='Info huurder')),
                ('cgs_DatTijdGesprek', models.DateTimeField(blank=True, help_text='Datum en tijd dat het coachgesprek is ingeplanned', null=True, verbose_name='Datum en tijd gesprek')),
                ('cgs_WieAanWezig', models.TextField(blank=True, help_text='Wie gaan er tijdens het coach gesprek aanwezig zijn', null=True, verbose_name='Wie gaan aanwezig zijn')),
                ('cgs_IsWoningToerAangekond', models.BooleanField(blank=True, help_text='Is aan de bewonders doorgegeven dat er een Woningtoer is?', null=True, verbose_name='Woningtoer aangekondigd')),
                ('cgs_EnergieRekBijDeHand', models.BooleanField(blank=True, help_text='Heeft de bewoner de energierekening bij de hand voor tijdens het gesprek?', null=True, verbose_name='Energierekening bij de hand')),
                ('cgs_ElektraMeter', models.CharField(blank=True, choices=[('G', 'Gewoon'), ('S', 'Slimme meter')], help_text='Wat voor energiemeter heeft de bewoner?', max_length=1, null=True, verbose_name='Energiemeter')),
                ('cgs_Motivatie', models.CharField(blank=True, choices=[('Ml', 'Verlagen maandlasten'), ('C', 'Confort verbeteren'), ('L', 'Leuke uitdaging'), ('G', 'Gezondheid'), ('M', 'Iets voor het milieu doen'), ('A', 'Niet achter willen blijven'), ('Vl', 'Voorop willen lopen')], help_text='Wat is de motivatie voor de aanvraag?', max_length=2, null=True, verbose_name='Motivatie')),
                ('cgs_MotivatieAnders', models.TextField(blank=True, help_text='Andere motivatie dan bovenstaand', null=True, verbose_name='Andere motivatie')),
                ('cgs_IsDatumTijdBevestigd', models.BooleanField(blank=True, help_text='Is de datum en tijd voor het coachgesprek bevestigd door de bewoner?', null=True, verbose_name='Datum / Tijd bevestiging')),
                ('cgs_IsDocsKlaarGelegd', models.BooleanField(blank=True, help_text='Zijn de documenten klaargelegd door de coach?', null=True, verbose_name='Documenten klaargelegd')),
                ('cgs_IsWonToerHerAangeKond', models.BooleanField(blank=True, help_text='Is aan de bewonders voor een twede keer doorgegeven dat er een Woningtoer is?', null=True, verbose_name='Woningtoer heraangekondigd')),
                ('cgs_IsInAgendGeplaatst', models.BooleanField(blank=True, help_text='Heeft de coach het gesprek in zijn agenda geplaats?', null=True, verbose_name='Coachgesprek in agenda coach')),
                ('cgs_GenomenEnergMaatr', models.TextField(blank=True, help_text='Zijn er al energiemaatregelen genomen door de woningbouw?', null=True, verbose_name='Genomen energie maatregelen')),
                ('cgs_GeplandeEnrgMaatr', models.TextField(blank=True, help_text='Heeft de woningbouw energiemaatregelen geplanned voor deze woning?', null=True, verbose_name='Geplande energie maatregelen')),
                ('cgs_EnergieLabel', models.TextField(blank=True, help_text='Wat is het energielabel voor deze woning nu en straks?', null=True, verbose_name='Energielabel')),
                ('cgs_BekendeProbl', models.TextField(blank=True, help_text='Zijn er bekende problemen aan deze woning (vocht, geluid)', null=True, verbose_name='Bekende problemen')),
                ('cgs_RedenEnergBesp', models.TextField(blank=True, help_text='Wat maakt dat u energie wilt besparen?', null=True, verbose_name='Reden van energiebesparen')),
                ('cgs_RedenEnergBespAnderen', models.TextField(blank=True, help_text='Wat vinden de anderen (bewoners) over reden dat uw energie wilt besparen?', null=True, verbose_name='Reden van energiebesparen volgens anderen')),
                ('cgs_ToekomstPlanWoning', models.TextField(blank=True, help_text='Wat zijn de toekomstplannen die u heeft voor de woning, indien u die heeft?', null=True, verbose_name='Toekomstplannen voor de woning')),
                ('cgs_MetWieHierWonen', models.TextField(blank=True, help_text='Met wie woont u in dit huis (medebewoners)?', null=True, verbose_name='Met wie woont u hier')),
                ('cgs_BudgetKlMaatr', models.TextField(blank=True, help_text='Is er budget voor kleine besparingen (om advies op af te stemmen)?', null=True, verbose_name='Is er budget voor kleine besparingen')),
                ('cgs_IetsGedaanEnrgMaatr', models.TextField(blank=True, help_text='Heeft u al iets gedaan aanenergiebesparing? Wat?', null=True, verbose_name='Al iets gedaan aan energiebesparing')),
                ('cgs_AfwijkEnergRek', models.TextField(blank=True, help_text='wijkt de energierekening af van het gemiddelde? Is het (te) hoog?', null=True, verbose_name='Afwijking energierekening')),
                ('cgs_TypeRadiatorknop', models.CharField(blank=True, choices=[('G', 'Gewoon'), ('T', 'Thermostaat')], help_text='Type radiatorknoppen aanwezig in huis?', max_length=1, null=True, verbose_name='Type radiatorknop')),
                ('cgs_TypeThermostaat', models.CharField(blank=True, choices=[('G', 'Gewoon'), ('S', 'Met dag nacht stand')], max_length=1, null=True, verbose_name='Type thermostaat')),
                ('cgs_IsAquariumAanw', models.BooleanField(blank=True, help_text='Is er in huis een aquarium aanwezig (ergens in huis)?', null=True, verbose_name='Is er een aquarium aanwezig')),
                ('cgs_IsAircoAanw', models.BooleanField(blank=True, help_text='Is er airco aanwezig in huis?', null=True, verbose_name='Is er Airco')),
                ('cgs_TypeRaambekleding_Wk', models.CharField(blank=True, choices=[('G', 'Gordijn'), ('J', 'Jaloezie'), ('V', 'Vouwgordijnen'), ('R', 'Rolgordijnen')], help_text='Type raambekleding in de woonkamer?', max_length=1, null=True, verbose_name='Type raambekleding')),
                ('cgs_TypeVerlichting_Wk', models.CharField(blank=True, choices=[('G', 'Gloeilamp'), ('T', 'TL'), ('H', 'Halogeen'), ('L', 'Led')], help_text='Wat voor type verlichting is er aanwezig in de woonkamer?', max_length=1, null=True, verbose_name='Type verlichting')),
                ('cgs_Problemen_Wk', models.CharField(blank=True, choices=[('S', 'Schimmel'), ('V', 'Vocht'), ('G', 'Geluid')], help_text='Constateerd u problemen in de woonkamer?', max_length=1, null=True, verbose_name='Problemen woonkamer')),
                ('cgs_OverigOpmerk_Wk', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen woonkamer')),
                ('cgs_TypeWasMachGebruik', models.CharField(blank=True, choices=[('V', 'Vol'), ('E', 'Ecostand')], max_length=1, null=True, verbose_name='Type wasmachinegebruik')),
                ('cgs_IsKokenMetDeksel', models.BooleanField(blank=True, null=True, verbose_name='Deksel op pan tijdens koken?')),
                ('cgs_TypeKookSysteem', models.CharField(blank=True, choices=[('G', 'Gas'), ('I', 'Inductie'), ('K', 'Keramisch'), ('O', 'Oven'), ('M', 'Magnetron')], help_text='Hoe kookt men, welke middelen gebruikt men daarvoor?', max_length=1, null=True, verbose_name='Wijze van koken')),
                ('cgs_IsAfzuigingVrij', models.BooleanField(blank=True, null=True, verbose_name='Is afzuiging vrij en schoon?')),
                ('cgs_IsCloseInBoilerAanw', models.BooleanField(blank=True, null=True, verbose_name='Close in boiler aanwezig?')),
                ('cgs_AanwApperatuur', models.CharField(blank=True, choices=[('T', 'Thuistap'), ('Wk', 'Waterkoker'), ('Km', 'Keukenmachine'), ('Ka', 'Koffiezetapparaat'), ('Br', 'Broodrooster'), ('Cg', 'Contact grill')], help_text='Overige aanwezige apperatuur', max_length=2, null=True, verbose_name='Aanwezige apparatuur')),
                ('cgs_Problemen_K', models.CharField(blank=True, choices=[('S', 'Schimmel'), ('V', 'Vocht'), ('G', 'Geluid')], help_text='Constateerd u problemen in de keuken?', max_length=1, null=True, verbose_name='Problemen keuken')),
                ('cgs_OverigOpmerk_K', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen keuken')),
                ('cgs_IsRadiatorAanw_Gng', models.BooleanField(blank=True, null=True, verbose_name='Radiator aanwezig in gang?')),
                ('cgs_IsBrievenBusAanw_Gng', models.BooleanField(blank=True, null=True, verbose_name='Brievenbus aanwezig in gang?')),
                ('cgs_TypeVerlichting_Gng', models.CharField(blank=True, choices=[('G', 'Gloeilamp'), ('T', 'TL'), ('H', 'Halogeen'), ('L', 'Led')], help_text='Wat voor type verlichting is er aanwezig in de Gang?', max_length=1, null=True, verbose_name='Type verlichting in gang')),
                ('cgs_TypeTochtVoorziening_Gng', models.CharField(blank=True, choices=[('G', 'Geen'), ('Ts', 'Tochtstrip'), ('K', 'Kussen')], max_length=2, null=True, verbose_name='Type tochtvoorziening gang')),
                ('cgs_Problemen_Gng', models.CharField(blank=True, choices=[('S', 'Schimmel'), ('V', 'Vocht'), ('G', 'Geluid')], help_text='Constateerd u problemen in de gang?', max_length=1, null=True, verbose_name='Problemen gang')),
                ('cgs_OverigOpmerk_Gng', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen gang')),
                ('cgs_CVOnderhoud', models.CharField(blank=True, choices=[('N', 'Niet'), ('P', 'Periodiek')], help_text='Welke type onderhoud wordt er gepleegd aan de cb ketel?', max_length=1, null=True, verbose_name='Type onderhoud cv ketel')),
                ('cgs_CVTemperatuur', models.IntegerField(blank=True, help_text='Op wat voor water temperatuur staat de CV ketel ingestel', null=True, verbose_name='Temperatuur cv ketel')),
                ('cgs_TypeVerlichting_Slk', models.CharField(blank=True, choices=[('G', 'Gloeilamp'), ('T', 'TL'), ('H', 'Halogeen'), ('L', 'Led')], max_length=1, null=True, verbose_name='Type verlichting slaapkamer')),
                ('cgs_IsApparatuurStndBy', models.BooleanField(blank=True, null=True, verbose_name='Apparatuur op standby aanwezig slaapkamer?')),
                ('cgs_IsVerwarmd', models.BooleanField(blank=True, null=True, verbose_name='Word verwarming gebruikt in slaapkamer?')),
                ('cgs_IsAircoAanw_Slk', models.BooleanField(blank=True, null=True, verbose_name='Is er Airco in slaapkamer')),
                ('cgs_TypeBed', models.CharField(blank=True, choices=[('G', 'Geen'), ('W', 'Waterbed'), ('E', 'Elektrische deken')], max_length=1, null=True, verbose_name='Type bedverwarming')),
                ('cgs_Problemen_Slk', models.CharField(blank=True, choices=[('S', 'Schimmel'), ('V', 'Vocht'), ('G', 'Geluid')], help_text='Constateerd u problemen in de slaapkamer?', max_length=1, null=True, verbose_name='Problemen slaapkamer')),
                ('cgs_OverigOpmerk_Slk', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen slaapkamer(s)')),
                ('cgs_IsTuinVerlAanw', models.BooleanField(blank=True, null=True, verbose_name='Is er tuinverlichting aanwezig?')),
                ('cgs_IsVijverpompAanw', models.BooleanField(blank=True, null=True, verbose_name='Is er vijverpomp aanwezig?')),
                ('cgs_IsTerrasVerwAanw', models.BooleanField(blank=True, null=True, verbose_name='Is er terrasverwarming?')),
                ('cgs_OverigOpmerk_Tn', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen tuin')),
                ('cgs_IsTwedeeKoelkAanw', models.BooleanField(blank=True, help_text='Of vrieskist', null=True, verbose_name='Is er tweede koelkast aanwezig?')),
                ('cgs_OverigOpmerk_Sch', models.TextField(blank=True, null=True, verbose_name='Overige opmerkingen schuur')),
                ('cgs_BespaarAdviesTekst', models.TextField(blank=True, null=True, verbose_name='Bespaar advies')),
                ('cgs_AdviesContact', models.OneToOneField(blank=True, help_text='Kies bijbehorende adviescontact', null=True, on_delete=django.db.models.deletion.CASCADE, to='drzData.adviescontact', verbose_name='Adviescontact')),
            ],
            options={
                'verbose_name_plural': 'Coachgesprekken',
            },
        ),
    ]
